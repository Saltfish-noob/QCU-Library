<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 配置不拦截的资源 -->
    <security:http pattern="/login.jsp" security="none"/>
    <security:http pattern="/about.jsp" security="none"/>
    <security:http pattern="/failer.jsp" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/images/**" security="none"/>
    <security:http pattern="/fonts/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <!--
    	配置具体的规则
    	auto-config="true"	不用自己编写登录的页面，框架提供默认登录页面
    	use-expressions="false"	是否使用SPEL表达式（没学习过）
    -->
    <security:http auto-config="true" use-expressions="true">
        <!-- 配置具体的拦截的规则 pattern="请求路径的规则" access="访问系统的人，必须有ROLE_USER的角色" -->
        <security:intercept-url pattern="/pages/front-end/index.jsp" access="hasAuthority('Permission_FindAllBookINFront')"/>
        <security:intercept-url pattern="/pages/back-end/main.jsp" access="hasAuthority('Permission_FindAllUser')"/>

        <!-- 定义跳转的具体的页面 -->
        <security:form-login
                login-page="/login.jsp"
                login-processing-url="/login.do"
                default-target-url="/login.jsp"
                authentication-failure-forward-url="/failer.jsp"
                authentication-success-forward-url="/pages/front-end/index.jsp"
        />
        <!--七天免登陆-->
        <security:remember-me user-service-ref="userService" data-source-ref="dataSource"
                              token-validity-seconds="604800"/>

        <!-- 退出 -->
        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/login.jsp"/>

        <!-- 关闭跨域请求 -->
        <security:csrf disabled="true"/>
    </security:http>

    <bean class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"
          id="jdbcTokenRepository">
        <property name="dataSource" ref="dataSource"/>
        <!--      value首次启动应为true，自动创建数据库表-->
        <property name="createTableOnStartup" value="false"/>
    </bean>

    <!-- 切换成数据库中的用户名和密码 -->
    <security:authentication-manager erase-credentials="false">
        <security:authentication-provider user-service-ref="userService">
            <!--配置加密的方式-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 配置加密类 -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- 提供了入门的方式，在内存中存入用户名和密码-->
    <!--<security:authentication-manager>
    	<security:authentication-provider>
    		<security:user-service>
    			<security:user name="admin" password="{noop}admin" authorities="ROLE_USER"/>
    		</security:user-service>
    	</security:authentication-provider>
    </security:authentication-manager>-->

    <security:global-method-security jsr250-annotations="enabled" secured-annotations="enabled"
                                     pre-post-annotations="enabled"/>

</beans>